# how to create base64 string: https://www.obytes.com/blog/react-native-github-action
name: deploy to development server
on:
  push:
    branches:
      - develop
# on:
#   pull_request:
#     branches:
#       - stg
#     types: [closed]
jobs:  
  # test-dependency:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node_version: ['16']
  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 1
        
  #     - name: Set up node 
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: ${{ matrix.node_version }}

  #     - name: use cache 
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           node_modules
  #           */*/node_modules
  #         key: ${{ matrix.node_version }}-${{ hashFiles('package-lock.json') }}
  # test-unit:
  #   needs: test-dependency
  #   # runs-on: self-hosted
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node_version: ['16']
  #   steps:
  #     - name: Set up node 
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: ${{ matrix.node_version }}
  #     - name: use cache 
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           node_modules
  #           */*/node_modules
  #         key: ${{ matrix.node_version }}-${{ hashFiles('package-lock.json') }}
  #     - name: Run unit tests 
  #       run: echo "mock unit test success"
        # run: npm run test:ci
  # scp-tarball-to-server:
  #   needs:
  #     - test-unit
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node_version: ['16']
  #   steps:
  #     - name: create pem
  #       run: echo ${{ secrets.SSH_KEY_AHA_DEV_VALUE }} > ./ssh-key-aha-dev.pem
  #     - name: 'copy tarball to server'
  #       run: scp -i ./ssh-key-aha-dev.pem  -o "StrictHostKeyChecking no" ./**  ${{ secrets.USERNAME }}@${{ secrets.HOST }}:~/queue-core
  ssh-to-server-restart-service:
    # needs:
    #   - scp-tarball-to-server
    name: restart-service
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version: ['16']
    steps:
    - name: Check out Git repository # clone the repo to local ci workspace
      uses: actions/checkout@v2
    - name: Set up node 
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node_version }}
    # - uses: "finnp/create-file-action@master"
    #   env:
    #     FILE_NAME: "./ssh-key-aha-dev.pem"
    #     FILE_DATA: ${{ secrets.SSH_KEY_AHA_DEV_VALUE }}
    - name: Create pem file
      run: echo "${{ secrets.SSH_KEY_AHA_DEV_VALUE }}" > ./ssh-key-aha-dev.pem
    - name: Create .env file
      run: echo "${{ secrets.DEV_ENV}}" > .env
    - name: Change file mode
      run: chmod 0600 ./ssh-key-aha-dev.pem
    - name: 'clear files on server'
      run: ssh -i ./ssh-key-aha-dev.pem  -o "StrictHostKeyChecking no" ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'rm -rf ./queue-core/**'
    - name: 'copy files to server'
      run: scp -i ./ssh-key-aha-dev.pem  -o "StrictHostKeyChecking no" -r ./**  ${{ secrets.USERNAME }}@${{ secrets.HOST }}:~/queue-core
    - name: ls -a via ssh
      uses: fifsky/ssh-action@master
      with:
        command: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
          nvm install 16.14.2
        host: ${{ secrets.HOST }}
        user: ubuntu
        key: ${{ secrets.SSH_KEY_AHA_DEV_VALUE }}
    # - name: 'copy files to server'
    #   run: ssh -i ./ssh-key-aha-dev.pem  -o "StrictHostKeyChecking no" ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'cd ./queue-core && ./scripts/pm2serverrestart.sh'
